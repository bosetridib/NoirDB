# Generated by Django 3.0.8 on 2020-07-28 23:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('year', models.PositiveIntegerField(null=True)),
                ('release_date', models.CharField(max_length=200, null=True)),
                ('studio', models.CharField(blank=True, default='', max_length=100)),
                ('based_on', models.CharField(blank=True, default='', max_length=800)),
                ('slug', models.SlugField(default='', max_length=150)),
                ('poster_image', models.ImageField(blank=True, upload_to='posters/')),
                ('film_summary', models.TextField(blank=True, default='')),
                ('rank', models.PositiveIntegerField(null=True)),
                ('num_reviews', models.PositiveIntegerField(null=True)),
                ('avg_rating', models.FloatField(null=True)),
            ],
            options={
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('dob', models.DateField(blank=True, null=True)),
                ('dod', models.DateField(blank=True, null=True)),
                ('slug', models.SlugField(default='', editable=False, max_length=150)),
                ('bio_summary', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name_plural': 'people',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserMovieLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seen', models.BooleanField(blank=True, default=False, null=True)),
                ('favorite', models.BooleanField(blank=True, default=False, null=True)),
                ('watch_list', models.BooleanField(blank=True, default=False, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('star_rating', models.PositiveSmallIntegerField(choices=[(1, 'Total Garbage... (One Star)'), (2, 'It was very Meh...  (Two Stars)'), (3, 'Solid, enjoyable... (Three Stars)'), (4, 'Great, highly recommended... (Four Stars)'), (5, 'An absolute Classic... (Five Stars)')], default=3)),
                ('review_text', models.TextField(default='', max_length=2000)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='all_cast',
            field=models.ManyToManyField(related_name='movies_cast', through='films.Cast', to='films.Person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='all_crew',
            field=models.ManyToManyField(related_name='movies_crew', through='films.Crew', to='films.Person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='user_notes',
            field=models.ManyToManyField(related_name='movies_notes', through='films.UserMovieLink', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MediaLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_link', models.URLField(max_length=800)),
                ('host', models.CharField(default='', max_length=200)),
                ('free', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Movie')),
            ],
        ),
        migrations.AddField(
            model_name='crew',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Job'),
        ),
        migrations.AddField(
            model_name='crew',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Movie'),
        ),
        migrations.AddField(
            model_name='crew',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Person'),
        ),
        migrations.AddField(
            model_name='cast',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Movie'),
        ),
        migrations.AddField(
            model_name='cast',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Person'),
        ),
        migrations.AddConstraint(
            model_name='usermovielink',
            constraint=models.UniqueConstraint(fields=('user', 'movie'), name='user_movie_unique'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('user', 'movie'), name='one_review_per_user'),
        ),
        migrations.AddConstraint(
            model_name='medialink',
            constraint=models.UniqueConstraint(fields=('movie', 'url_link'), name='unique_movielink_matches'),
        ),
    ]
